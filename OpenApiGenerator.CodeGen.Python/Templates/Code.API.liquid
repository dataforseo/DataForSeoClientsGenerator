import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import TYPE_CHECKING, Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated
from typing import List, Optional

if TYPE_CHECKING:
{%- for type in DependentTypes -%}
    from {{ type.Namespace }}.{{ type.ClassName | snakecase }} import {{ type.ClassName }}
{%- endfor -%}

from dataforseo_client.api_client import ApiClient, RequestSerialized
from dataforseo_client.api_response import ApiResponse
from dataforseo_client.rest import RESTResponseType

class {{ ClassName }}:

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client

    
{% for operation in Operations %}
    {%- if operation.RequestTypeBinding -%}
    from {{ operation.RequestTypeBinding.Namespace }}.{{ operation.RequestTypeBinding.ClassName | snakecase }} import {{ operation.RequestTypeBinding.ClassName }}
    {%- endif -%}
    from {{ operation.ResponseTypeBinding.Namespace }}.{{ operation.ResponseTypeBinding.ClassName | snakecase }} import {{ operation.ResponseTypeBinding.ClassName }}
    {% template Part.ApiOperation %}
{% endfor %}